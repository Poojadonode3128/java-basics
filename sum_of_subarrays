##You don't need to read input or print anything. The task is to complete the function subarraySum() which takes arr, N and S as input parameters 
and returns an arraylist containing the starting and ending positions of the first such occurring subarray from the left where sum equals to S. 
The two indexes in the array should be according to 1-based indexing. If no such subarray is found, return an array consisting only one element that is -1.
Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements 
from 2nd position to 4th position 
is 12.

***********************************************************************************************

 
import java.util.*;
public class Main
{   
    public static ArrayList<Integer> SubArray(int [] arr,int n,int sum){
        ArrayList<Integer> arr1=new ArrayList<>();
        int current_sum=0;
        int i,j;
        i=j=0;
        while(j<n){
            current_sum=current_sum+arr[j];
            while(current_sum>sum){
                current_sum=current_sum-arr[i];
                i++;
            }
            if(current_sum==sum){
                if(i>j){
                break;
                }
                arr1.add(i+1);
                arr1.add(j+1);
            }
            j++;
        }
        if(arr1.isEmpty())
        {
            arr1.add(-1);
        }
        return arr1;
        
    }
	public static void main(String[] args) {
	    int n=8;
	    int [] arr=new int[]{1,2,3,4,5,6,7,8};
	    int sum=10;
	    System.out.println(SubArray(arr,n,sum));
	    
	}
}
